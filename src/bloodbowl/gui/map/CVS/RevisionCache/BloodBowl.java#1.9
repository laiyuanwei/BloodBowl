/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * BloodBowl.java
 *
 * Created on Jan 4, 2011, 7:17:47 PM
 */
package bloodbowl.gui.map;

import bloodbowl.engine.Game;
import bloodbowl.gui.dialog.GameStart;
import bloodbowl.gui.dialog.TeamEditor;
import bloodbowl.model.map.PitchCell;
import bloodbowl.model.players.Player;
import bloodbowl.model.players.Skills;
import bloodbowl.model.teams.Team;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import javax.swing.DropMode;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.table.TableColumn;

/**
 *
 * @author mavencode
 */
public class BloodBowl extends javax.swing.JFrame {

    private Team team1;
    private Team team2;
    private Game gameEngine;
    private GameStart splashScreen;

    /** Creates new form BloodBowl */
    public BloodBowl() {

        initComponents();

        gameEngine = Game.getInstance();
        //gameEngine.createTeamsForTest();


        setUpMap();

        setUpTeam1DugOut();
        setUpTeam2DugOut();

        initialiseTeams();

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPnlBackground = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLblTeam1 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLblTeam2 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLblIsActive = new javax.swing.JLabel();
        jLblMA = new javax.swing.JLabel();
        jLblAG = new javax.swing.JLabel();
        jLblAV = new javax.swing.JLabel();
        jLblST = new javax.swing.JLabel();
        jLblSkills = new javax.swing.JLabel();
        jLblPlayerImage = new javax.swing.JLabel();
        jLblPlayerName = new javax.swing.JLabel();
        jPnlLog = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jPnlDugOutTeamA = new javax.swing.JPanel();
        pnlBoard = new javax.swing.JPanel();
        jPnlDugOutTeamB = new javax.swing.JPanel();
        jBtnThrow = new javax.swing.JButton();
        jBtnMove = new javax.swing.JButton();
        jBtnBlock = new javax.swing.JButton();
        gameMenuBar = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        saveGameMenuItem = new javax.swing.JMenuItem();
        quitGameMenuItem = new javax.swing.JMenuItem();
        editMenu = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        helpMenu = new javax.swing.JMenu();
        contentsMenuItem = new javax.swing.JMenuItem();
        aboutMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPnlBackground.setBackground(new java.awt.Color(102, 102, 102));
        jPnlBackground.setBorder(javax.swing.BorderFactory.createMatteBorder(4, 4, 4, 4, new java.awt.Color(0, 0, 0)));
        jPnlBackground.setName("jPnlBackground"); // NOI18N

        jPanel4.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel4.setName("jPanel4"); // NOI18N

        jPanel3.setBackground(java.awt.Color.lightGray);
        jPanel3.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, java.awt.Color.orange));
        jPanel3.setName("jPanel3"); // NOI18N

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel2.setName("jPanel2"); // NOI18N

        jLabel3.setFont(new java.awt.Font("Lucida Blackletter", 0, 18));
        jLabel3.setForeground(new java.awt.Color(204, 0, 51));
        jLabel3.setText("Team 1:");
        jLabel3.setName("jLabel3"); // NOI18N

        jLblTeam1.setFont(new java.awt.Font("Lucida Blackletter", 0, 18));
        jLblTeam1.setText("Team :");
        jLblTeam1.setName("jLblTeam1"); // NOI18N

        jLabel5.setFont(new java.awt.Font("Lucida Blackletter", 0, 18));
        jLabel5.setText("Points: O");
        jLabel5.setName("jLabel5"); // NOI18N

        jLabel6.setFont(new java.awt.Font("Lucida Blackletter", 0, 18));
        jLabel6.setText("Turn: 8/8");
        jLabel6.setName("jLabel6"); // NOI18N

        org.jdesktop.layout.GroupLayout jPanel2Layout = new org.jdesktop.layout.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jLabel3)
                    .add(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .add(jLblTeam1))
                    .add(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .add(jLabel6))
                    .add(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .add(jLabel5)))
                .addContainerGap(256, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .add(jLabel3)
                .add(27, 27, 27)
                .add(jLblTeam1)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jLabel5)
                .add(12, 12, 12)
                .add(jLabel6)
                .addContainerGap(90, Short.MAX_VALUE))
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel5.setName("jPanel5"); // NOI18N

        jLabel2.setFont(new java.awt.Font("Lucida Blackletter", 0, 18));
        jLabel2.setForeground(new java.awt.Color(204, 0, 51));
        jLabel2.setText("Team 2:");
        jLabel2.setName("jLabel2"); // NOI18N

        jLabel7.setFont(new java.awt.Font("Lucida Blackletter", 0, 18));
        jLabel7.setText("Points: O");
        jLabel7.setName("jLabel7"); // NOI18N

        jLblTeam2.setFont(new java.awt.Font("Lucida Blackletter", 0, 18));
        jLblTeam2.setText("Team :");
        jLblTeam2.setName("jLblTeam2"); // NOI18N

        jLabel9.setFont(new java.awt.Font("Lucida Blackletter", 0, 18));
        jLabel9.setText("Turn : 8/8");
        jLabel9.setName("jLabel9"); // NOI18N

        org.jdesktop.layout.GroupLayout jPanel5Layout = new org.jdesktop.layout.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel5Layout.createSequentialGroup()
                .add(jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jLabel2)
                    .add(jPanel5Layout.createSequentialGroup()
                        .addContainerGap()
                        .add(jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jLblTeam2)
                            .add(jLabel9)))
                    .add(jPanel5Layout.createSequentialGroup()
                        .addContainerGap()
                        .add(jLabel7)))
                .addContainerGap(251, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel5Layout.createSequentialGroup()
                .add(jLabel2)
                .add(33, 33, 33)
                .add(jLblTeam2)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jLabel7)
                .add(12, 12, 12)
                .add(jLabel9)
                .addContainerGap(81, Short.MAX_VALUE))
        );

        jPanel6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel6.setName("jPanel6"); // NOI18N

        jLabel1.setFont(new java.awt.Font("Lucida Blackletter", 0, 18));
        jLabel1.setForeground(new java.awt.Color(204, 0, 51));
        jLabel1.setText("Statistics");
        jLabel1.setName("jLabel1"); // NOI18N

        jLblIsActive.setFont(new java.awt.Font("Lucida Blackletter", 0, 14));
        jLblIsActive.setText("Is Active:");
        jLblIsActive.setName("jLblIsActive"); // NOI18N

        jLblMA.setFont(new java.awt.Font("Lucida Blackletter", 0, 14));
        jLblMA.setText("MA:");
        jLblMA.setName("jLblMA"); // NOI18N

        jLblAG.setFont(new java.awt.Font("Lucida Blackletter", 0, 14));
        jLblAG.setText("AG:");
        jLblAG.setName("jLblAG"); // NOI18N

        jLblAV.setFont(new java.awt.Font("Lucida Blackletter", 0, 14));
        jLblAV.setText("AV:");
        jLblAV.setName("jLblAV"); // NOI18N

        jLblST.setFont(new java.awt.Font("Lucida Blackletter", 0, 14));
        jLblST.setText("ST:");
        jLblST.setName("jLblST"); // NOI18N

        jLblSkills.setFont(new java.awt.Font("Lucida Bright", 0, 12)); // NOI18N
        jLblSkills.setText("Skills:");
        jLblSkills.setName("jLblSkills"); // NOI18N

        jLblPlayerImage.setName("jLblPlayerImage"); // NOI18N

        jLblPlayerName.setText("--");
        jLblPlayerName.setName("jLblPlayerName"); // NOI18N

        org.jdesktop.layout.GroupLayout jPanel6Layout = new org.jdesktop.layout.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel6Layout.createSequentialGroup()
                .add(jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jLabel1)
                    .add(jPanel6Layout.createSequentialGroup()
                        .addContainerGap()
                        .add(jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jPanel6Layout.createSequentialGroup()
                                .add(jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(jLblAV)
                                    .add(jLblMA)
                                    .add(jLblAG)
                                    .add(jLblST)
                                    .add(jLblIsActive)
                                    .add(jLblPlayerName))
                                .add(38, 38, 38)
                                .add(jLblPlayerImage, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 123, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(jLblSkills))))
                .addContainerGap(116, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel6Layout.createSequentialGroup()
                .add(jLabel1)
                .add(18, 18, 18)
                .add(jLblSkills)
                .add(14, 14, 14)
                .add(jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jLblPlayerImage, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 151, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jPanel6Layout.createSequentialGroup()
                        .add(jLblMA)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jLblAG)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jLblAV)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jLblST)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jLblIsActive)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jLblPlayerName)))
                .addContainerGap())
        );

        org.jdesktop.layout.GroupLayout jPanel3Layout = new org.jdesktop.layout.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel5, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .add(jPanel2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .add(jPanel6, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel3Layout.createSequentialGroup()
                .add(jPanel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel6, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        org.jdesktop.layout.GroupLayout jPanel4Layout = new org.jdesktop.layout.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel3, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 710, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
        );

        jPnlLog.setBorder(new javax.swing.border.MatteBorder(null));
        jPnlLog.setName("jPnlLog"); // NOI18N

        jPanel1.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(156, 122, 29)), javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0))));
        jPanel1.setName("jPanel1"); // NOI18N

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        jTextArea1.setColumns(20);
        jTextArea1.setEditable(false);
        jTextArea1.setFont(new java.awt.Font("Lucida Blackletter", 1, 24));
        jTextArea1.setForeground(java.awt.Color.red);
        jTextArea1.setRows(5);
        jTextArea1.setText("this is the blood bowl game...\nTeam: Human roll dice...\ndice: 2/4\nTeam: Orcs roll dice...\ndice: 5/6\n....\n\n\n\n");
        jTextArea1.setName("jTextArea1"); // NOI18N
        jScrollPane1.setViewportView(jTextArea1);

        jScrollPane2.setName("jScrollPane2"); // NOI18N

        jTextArea2.setColumns(20);
        jTextArea2.setEditable(false);
        jTextArea2.setFont(new java.awt.Font("Lucida Blackletter", 1, 24));
        jTextArea2.setForeground(java.awt.Color.red);
        jTextArea2.setRows(5);
        jTextArea2.setText("this is the blood bowl game...\nTeam: Human roll dice...\ndice: 2/4\nTeam: Orcs roll dice...\ndice: 5/6\n....\n\n\n\n");
        jTextArea2.setName("jTextArea2"); // NOI18N
        jScrollPane2.setViewportView(jTextArea2);

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 134, Short.MAX_VALUE)
                .add(jScrollPane2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 239, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jScrollPane2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 239, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        org.jdesktop.layout.GroupLayout jPnlLogLayout = new org.jdesktop.layout.GroupLayout(jPnlLog);
        jPnlLog.setLayout(jPnlLogLayout);
        jPnlLogLayout.setHorizontalGroup(
            jPnlLogLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
        );
        jPnlLogLayout.setVerticalGroup(
            jPnlLogLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPnlLogLayout.createSequentialGroup()
                .add(jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 245, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPnlDugOutTeamA.setBackground(java.awt.Color.lightGray);
        jPnlDugOutTeamA.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPnlDugOutTeamA.setName("jPnlDugOutTeamA"); // NOI18N
        jPnlDugOutTeamA.setOpaque(false);

        org.jdesktop.layout.GroupLayout jPnlDugOutTeamALayout = new org.jdesktop.layout.GroupLayout(jPnlDugOutTeamA);
        jPnlDugOutTeamA.setLayout(jPnlDugOutTeamALayout);
        jPnlDugOutTeamALayout.setHorizontalGroup(
            jPnlDugOutTeamALayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 114, Short.MAX_VALUE)
        );
        jPnlDugOutTeamALayout.setVerticalGroup(
            jPnlDugOutTeamALayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 339, Short.MAX_VALUE)
        );

        pnlBoard.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        pnlBoard.setName("pnlBoard"); // NOI18N

        org.jdesktop.layout.GroupLayout pnlBoardLayout = new org.jdesktop.layout.GroupLayout(pnlBoard);
        pnlBoard.setLayout(pnlBoardLayout);
        pnlBoardLayout.setHorizontalGroup(
            pnlBoardLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 730, Short.MAX_VALUE)
        );
        pnlBoardLayout.setVerticalGroup(
            pnlBoardLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 372, Short.MAX_VALUE)
        );

        jPnlDugOutTeamB.setBackground(java.awt.Color.lightGray);
        jPnlDugOutTeamB.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPnlDugOutTeamB.setName("jPnlDugOutTeamB"); // NOI18N
        jPnlDugOutTeamB.setOpaque(false);

        org.jdesktop.layout.GroupLayout jPnlDugOutTeamBLayout = new org.jdesktop.layout.GroupLayout(jPnlDugOutTeamB);
        jPnlDugOutTeamB.setLayout(jPnlDugOutTeamBLayout);
        jPnlDugOutTeamBLayout.setHorizontalGroup(
            jPnlDugOutTeamBLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 100, Short.MAX_VALUE)
        );
        jPnlDugOutTeamBLayout.setVerticalGroup(
            jPnlDugOutTeamBLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 327, Short.MAX_VALUE)
        );

        jBtnThrow.setFont(new java.awt.Font("Lucida Blackletter", 0, 14));
        jBtnThrow.setText("Throw");
        jBtnThrow.setName("jBtnThrow"); // NOI18N
        jBtnThrow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnThrowActionPerformed(evt);
            }
        });

        jBtnMove.setFont(new java.awt.Font("Lucida Blackletter", 0, 14));
        jBtnMove.setText("Move");
        jBtnMove.setName("jBtnMove"); // NOI18N
        jBtnMove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnMoveActionPerformed(evt);
            }
        });

        jBtnBlock.setFont(new java.awt.Font("Lucida Blackletter", 0, 14));
        jBtnBlock.setText("Block");
        jBtnBlock.setName("jBtnBlock"); // NOI18N
        jBtnBlock.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnBlockActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPnlBackgroundLayout = new org.jdesktop.layout.GroupLayout(jPnlBackground);
        jPnlBackground.setLayout(jPnlBackgroundLayout);
        jPnlBackgroundLayout.setHorizontalGroup(
            jPnlBackgroundLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPnlBackgroundLayout.createSequentialGroup()
                .add(jPnlBackgroundLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPnlBackgroundLayout.createSequentialGroup()
                        .add(jPnlDugOutTeamA, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(pnlBoard, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(18, 18, 18)
                        .add(jPnlDugOutTeamB, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jPnlBackgroundLayout.createSequentialGroup()
                        .add(332, 332, 332)
                        .add(jBtnMove)
                        .add(18, 18, 18)
                        .add(jBtnBlock, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 89, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(18, 18, 18)
                        .add(jBtnThrow))
                    .add(jPnlLog, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel4, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPnlBackgroundLayout.setVerticalGroup(
            jPnlBackgroundLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPnlBackgroundLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                .add(org.jdesktop.layout.GroupLayout.LEADING, jPanel4, 0, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(org.jdesktop.layout.GroupLayout.LEADING, jPnlBackgroundLayout.createSequentialGroup()
                    .addContainerGap()
                    .add(jPnlBackgroundLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                        .add(jPnlBackgroundLayout.createSequentialGroup()
                            .add(pnlBoard, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(18, 18, 18)
                            .add(jPnlBackgroundLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                .add(jBtnMove)
                                .add(jBtnBlock)
                                .add(jBtnThrow)))
                        .add(jPnlDugOutTeamA, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(jPnlDugOutTeamB, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(25, 25, 25)
                    .add(jPnlLog, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 248, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
        );

        fileMenu.setText("Game");

        saveGameMenuItem.setText("Save Game...");
        fileMenu.add(saveGameMenuItem);

        quitGameMenuItem.setText("Quit");
        quitGameMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quitGameMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(quitGameMenuItem);

        gameMenuBar.add(fileMenu);

        editMenu.setText("Moves");

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Z, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem1.setText("Undo");
        jMenuItem1.setName("jMenuItem1"); // NOI18N
        editMenu.add(jMenuItem1);

        gameMenuBar.add(editMenu);

        helpMenu.setText("Help");

        contentsMenuItem.setText("Contents");
        helpMenu.add(contentsMenuItem);

        aboutMenuItem.setText("About");
        helpMenu.add(aboutMenuItem);

        gameMenuBar.add(helpMenu);

        setJMenuBar(gameMenuBar);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPnlBackground, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPnlBackground, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void quitGameMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quitGameMenuItemActionPerformed

        int choice = JOptionPane.showConfirmDialog(this, "Are you sure you want to quit the game?", "BloodBowl", JOptionPane.YES_NO_OPTION);

        if (choice == JOptionPane.YES_OPTION) {
            splashScreen = new GameStart();
            splashScreen.setVisible(true);

            this.setVisible(false);
        }
    }//GEN-LAST:event_quitGameMenuItemActionPerformed

    private void jBtnThrowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnThrowActionPerformed
    }//GEN-LAST:event_jBtnThrowActionPerformed

    private void jBtnMoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnMoveActionPerformed
        gameEngine.initiateMoveAction();
    }//GEN-LAST:event_jBtnMoveActionPerformed

    private void jBtnBlockActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnBlockActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jBtnBlockActionPerformed

    private void setUpMap() {

        tblGamePitch = new PitchGrid();
        tableModel = new MapTableModel(tblGamePitch);

        tblGamePitch.setModel(tableModel);

        tblGamePitch.setRowHeight(25);
        TableColumn col;

        for (int i = 0; i < tblGamePitch.getColumnCount(); i++) {
            col = tblGamePitch.getColumnModel().getColumn(i);
            col.setMaxWidth(25);
        }

        tblGamePitch.setCellSelectionEnabled(true);
        tblGamePitch.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);

        pnlBoard.setLayout(new BorderLayout());
        pnlBoard.add(tblGamePitch, BorderLayout.CENTER);

        tblGamePitch.setSelectionBackground(Color.BLUE);

        tblGamePitch.addMouseListener(new MouseAdapter() {

            @Override
            public void mouseClicked(MouseEvent e) {

                int rowSelected = tblGamePitch.rowAtPoint(e.getPoint());
                int columnSelected = tblGamePitch.columnAtPoint(e.getPoint());


                Player player = gameEngine.getPlayerAtPitch(rowSelected, columnSelected);

                PitchCell pitchCell = new PitchCell(rowSelected, columnSelected);

                if (player == null) {
                    if (gameEngine.getSelectedPlayer() != null) {
                        PitchCell prevPitchCell = (PitchCell) gameEngine.getSelectedPlayer().getLocation();
                        //PitchCell resetPitch = (PitchCell) tblGamePitch.getValueAt(prevPitchCell.getRow(), prevPitchCell.getColumn());

                        gameEngine.movePlayer(pitchCell);
//                        if (gameEngine.movePlayer(pitchCell)) {
//                            //resetPitch.resetPlayer();
//                        }
                    }
                } else {
                    gameEngine.setSelectedPlayer(player);
                }

                setPlayerStatistics(player);

            }
        });

        tblGamePitch.setDropMode(DropMode.ON_OR_INSERT);
    }

    private void setUpTeam1DugOut() {

        tblTeam1Dugout = new DugOutGrid(gameEngine.getTeamA());

        tableModelTeam1 = new DugOutTableModel();

        tblTeam1Dugout.setModel(tableModelTeam1);
        tblTeam1Dugout.setRowHeight(30);

        TableColumn col;

        for (int i = 0; i < tblTeam1Dugout.getColumnCount(); i++) {
            col = tblTeam1Dugout.getColumnModel().getColumn(i);
            col.setMaxWidth(30);
        }

        tblTeam1Dugout.setRowSelectionAllowed(false);
        tblTeam1Dugout.setCellSelectionEnabled(true);

        tblTeam1Dugout.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        jPnlDugOutTeamA.setLayout(new BorderLayout());
        jPnlDugOutTeamA.add(tblTeam1Dugout, BorderLayout.CENTER);

        tblTeam1Dugout.setDragEnabled(true);

        tblTeam1Dugout.repaint();

        tblTeam1Dugout.addMouseListener(new MouseAdapter() {

            @Override
            public void mouseClicked(MouseEvent e) {

                int rowSelected = tblTeam1Dugout.rowAtPoint(e.getPoint());
                int columnSelected = tblTeam1Dugout.columnAtPoint(e.getPoint());

                Player player = gameEngine.getPlayerAtDugoutA(rowSelected, columnSelected);

                if (player != null) {
                    gameEngine.setSelectedPlayer(player);
                }

                setPlayerStatistics(player);

            }

            @Override
            public void mousePressed(MouseEvent e) {

                int rowSelected = tblTeam1Dugout.rowAtPoint(e.getPoint());
                int columnSelected = tblTeam1Dugout.columnAtPoint(e.getPoint());

                Player player = gameEngine.getPlayerAtDugoutA(rowSelected, columnSelected);

                if (player != null) {
                    gameEngine.setSelectedPlayer(player);
                }

                tblGamePitch.setTransferHandler(new PlayersTransferHandler(tblTeam1Dugout, team1));
            }
        });
    }

    private void setUpTeam2DugOut() {

        tblTeam2Dugout = new DugOutGrid(gameEngine.getTeamB());

        tableModelTeam2 = new DugOutTableModel();

        tblTeam2Dugout.setModel(tableModelTeam2);
        tblTeam2Dugout.setRowHeight(30);

        TableColumn col;

        for (int i = 0; i
                < tblTeam2Dugout.getColumnCount(); i++) {
            col = tblTeam2Dugout.getColumnModel().getColumn(i);
            col.setMaxWidth(30);
        }

        tblTeam2Dugout.setRowSelectionAllowed(false);
        tblTeam2Dugout.setCellSelectionEnabled(true);

        tblTeam2Dugout.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        jPnlDugOutTeamB.setLayout(new BorderLayout());
        jPnlDugOutTeamB.add(tblTeam2Dugout, BorderLayout.CENTER);

        tblTeam2Dugout.setDragEnabled(true);
        tblTeam2Dugout.repaint();

        tblTeam2Dugout.addMouseListener(new MouseAdapter() {

            @Override
            public void mouseClicked(MouseEvent e) {

                int rowSelected = tblTeam2Dugout.rowAtPoint(e.getPoint());
                int columnSelected = tblTeam2Dugout.columnAtPoint(e.getPoint());

                Player player = gameEngine.getPlayerAtDugoutB(rowSelected, columnSelected);

                if (player != null) {
                    gameEngine.setSelectedPlayer(player);
                }

                setPlayerStatistics(player);

            }

            @Override
            public void mousePressed(MouseEvent e) {

                int rowSelected = tblTeam2Dugout.rowAtPoint(e.getPoint());
                int columnSelected = tblTeam2Dugout.columnAtPoint(e.getPoint());

                Player player = gameEngine.getPlayerAtDugoutB(rowSelected, columnSelected);

                if (player != null) {
                    gameEngine.setSelectedPlayer(player);
                }
                tblGamePitch.setTransferHandler(new PlayersTransferHandler(tblTeam2Dugout, team2));
            }
        });
    }

    private void setPlayerStatistics(Player player) {

        if (player == null) {
            jLblPlayerName.setText("");
            jLblSkills.setText("Skills: -");
            jLblMA.setText("MA: -");
            jLblAG.setText("AG: -");
            jLblAV.setText("AV: -");
            jLblST.setText("ST: -");
            jLblIsActive.setText("Is Active: -");
            jLblPlayerImage.setIcon(null);
        } else {
            jLblPlayerName.setText("" + player.getType());
            jLblMA.setText("MA: " + player.getMa());
            jLblAG.setText("AG: " + player.getAg());
            jLblAV.setText("AV: " + player.getAv());
            jLblST.setText("ST: " + player.getSt());
            jLblIsActive.setText("Is Active: " + player.getActive());

            StringBuilder skillBuilder=new StringBuilder("Skills: ");
            for (Skills skill: player.getSkillsList())
            {
                skillBuilder.append(skill).append(" ");
            }
            jLblSkills.setText(skillBuilder.toString());

            jLblPlayerImage.setIcon(new ImageIcon(getClass().getResource(Utility.getImagePlayerResource(player))));
        }

    }

    private void initialiseTeams() {

        team1 = gameEngine.getTeamA();
        team2 = gameEngine.getTeamB();

        for (int i = 0; i < team1.getPlayers().size(); i++) {
            Player p1 = team1.getPlayer(i);

            p1.addObserver(tblGamePitch);
            p1.addObserver(tblTeam1Dugout);

        }

        for (int i = 0; i < team2.getPlayers().size(); i++) {
            Player p2 = team2.getPlayer(i);

            p2.addObserver(tblGamePitch);
            p2.addObserver(tblTeam2Dugout);

        }

        gameEngine.placeTeamsInReserves();

        jLblTeam1.setText("Team: " + gameEngine.getTeamA().getName());
        jLblTeam2.setText("Team: " + gameEngine.getTeamB().getName());

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new BloodBowl().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem aboutMenuItem;
    private javax.swing.JMenuItem contentsMenuItem;
    private javax.swing.JMenu editMenu;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JMenuBar gameMenuBar;
    private javax.swing.JMenu helpMenu;
    private javax.swing.JButton jBtnBlock;
    private javax.swing.JButton jBtnMove;
    private javax.swing.JButton jBtnThrow;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLblAG;
    private javax.swing.JLabel jLblAV;
    private javax.swing.JLabel jLblIsActive;
    private javax.swing.JLabel jLblMA;
    private javax.swing.JLabel jLblPlayerImage;
    private javax.swing.JLabel jLblPlayerName;
    private javax.swing.JLabel jLblST;
    private javax.swing.JLabel jLblSkills;
    private javax.swing.JLabel jLblTeam1;
    private javax.swing.JLabel jLblTeam2;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPnlBackground;
    private javax.swing.JPanel jPnlDugOutTeamA;
    private javax.swing.JPanel jPnlDugOutTeamB;
    private javax.swing.JPanel jPnlLog;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JPanel pnlBoard;
    private javax.swing.JMenuItem quitGameMenuItem;
    private javax.swing.JMenuItem saveGameMenuItem;
    // End of variables declaration//GEN-END:variables
    private MapTableModel tableModel;
    private DugOutTableModel tableModelTeam1;
    private DugOutTableModel tableModelTeam2;
    private PitchGrid tblGamePitch;
    private JButton btn;
    private TeamEditor teamEditor;
    private DugOutGrid tblTeam1Dugout;
    private DugOutGrid tblTeam2Dugout;
}
